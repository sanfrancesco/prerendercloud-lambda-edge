# see limits on Lambda@Edge http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-lambda-at-edge

service: Lambda-Edge-Prerendercloud

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  memorySize: 128
  role: LambdaEdgeRole
  # you can overwrite defaults here
  # stage: dev
  # you could define service wide environment variables here
  # but lambda@edge doesn't support them and will throw error if you try
  # environment:
  #   variable1: value1

# you can add packaging information here
package:
  #  include:
  #    - include-me.js
  #    - include-me-dir/**
  excludeDevDependencies: true
  exclude:
    - spec/**
    - package-lock.json
    - yarn.lock
    - README.md
    - deploy.js
    - create-invalidation.js
    - LICENSE
    - Makefile

functions:
  viewerRequest:
    handler: handler.viewerRequest
    timeout: 5
  originRequest:
    handler: handler.originRequest
    timeout: 30
  originResponse:
    handler: handler.originResponse
    timeout: 5

# I created a Lambda@Edge function via the wizard in Lambda Console
# and then copied the role and pasted it here
resources:
  Resources:
    LambdaEdgeRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - edgelambda.amazonaws.com
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: LambdaEdgeExecutionRole
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "arn:aws:logs:*:*:*"
